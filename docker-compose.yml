# ==================================
# Docker Compose - Sistema WhatsApp Masivo
# Configuración Multi-PC
# ==================================

version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: whatsapp_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-whatsapp_root_2025}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-whatsapp_masivo}
      MYSQL_USER: ${MYSQL_USER:-whatsapp_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-whatsapp_pass_2025}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/migration_campaign_config.sql:/docker-entrypoint-initdb.d/02-migration.sql
    ports:
      - "3306:3306"
    networks:
      - whatsapp_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-whatsapp_root_2025}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    container_name: whatsapp_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - whatsapp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación principal
  app:
    build: .
    container_name: whatsapp_app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Puerto
      PORT: 3000
      
      # Base de datos
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER:-whatsapp_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-whatsapp_pass_2025}
      DB_NAME: ${MYSQL_DATABASE:-whatsapp_masivo}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # JWT y Sesiones
      JWT_SECRET: ${JWT_SECRET:-change_this_secret_in_production_2025}
      SESSION_SECRET: ${SESSION_SECRET:-change_this_session_secret_2025}
      
      # Microservicio Python (opcional)
      PYTHON_SERVICE_URL: http://localhost:5000
      
      # Modo
      NODE_ENV: production
      
    volumes:
      # Sesiones de WhatsApp (COMPARTIDO entre contenedores)
      - whatsapp_sessions:/app/sessions
      - whatsapp_sessions_backup:/app/sessions_backup
      
      # Uploads y descargas
      - whatsapp_uploads:/app/uploads
      - whatsapp_downloads:/app/downloads
      - whatsapp_chats:/app/chats
      
    ports:
      - "3000:3000"
    networks:
      - whatsapp_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volúmenes persistentes
volumes:
  mysql_data:
    name: whatsapp_mysql_data
  redis_data:
    name: whatsapp_redis_data
  whatsapp_sessions:
    name: whatsapp_sessions_shared
  whatsapp_sessions_backup:
    name: whatsapp_sessions_backup
  whatsapp_uploads:
    name: whatsapp_uploads
  whatsapp_downloads:
    name: whatsapp_downloads
  whatsapp_chats:
    name: whatsapp_chats

# Red personalizada
networks:
  whatsapp_network:
    driver: bridge
    name: whatsapp_network

