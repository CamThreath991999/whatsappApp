/**
 * Script para aplicar migraciones de base de datos
 * Ejecutar: node scripts/apply_migrations.js
 */

const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

async function applyMigrations() {
    let connection;
    
    try {
        console.log('üîß Conectando a la base de datos...');
        
        connection = await mysql.createConnection({
            host: process.env.DB_HOST || 'localhost',
            user: process.env.DB_USER || 'root',
            password: process.env.DB_PASSWORD || '',
            database: process.env.DB_NAME || 'whatsapp_masivo',
            multipleStatements: true
        });

        console.log('‚úÖ Conexi√≥n establecida');

        // Migraci√≥n 1: Agregar campo observacion
        console.log('\nüìù Aplicando migraci√≥n: observacion...');
        try {
            await connection.execute(`
                ALTER TABLE mensajes 
                ADD COLUMN IF NOT EXISTS observacion VARCHAR(255) AFTER error_mensaje
            `);
            console.log('‚úÖ Campo "observacion" agregado/verificado');
        } catch (error) {
            if (error.code === 'ER_DUP_FIELDNAME') {
                console.log('‚ÑπÔ∏è  Campo "observacion" ya existe');
            } else {
                console.error('‚ùå Error agregando campo "observacion":', error.message);
            }
        }

        // Migraci√≥n 2: Agregar campo metadata
        console.log('\nüìù Aplicando migraci√≥n: metadata...');
        try {
            await connection.execute(`
                ALTER TABLE mensajes 
                ADD COLUMN IF NOT EXISTS metadata JSON AFTER observacion
            `);
            console.log('‚úÖ Campo "metadata" agregado/verificado');
        } catch (error) {
            if (error.code === 'ER_DUP_FIELDNAME') {
                console.log('‚ÑπÔ∏è  Campo "metadata" ya existe');
            } else {
                console.error('‚ùå Error agregando campo "metadata":', error.message);
            }
        }

        // Verificar estructura final
        console.log('\nüîç Verificando estructura de tabla "mensajes"...');
        const [columns] = await connection.execute(`
            DESCRIBE mensajes
        `);

        const hasObservacion = columns.some(col => col.Field === 'observacion');
        const hasMetadata = columns.some(col => col.Field === 'metadata');

        console.log('\nüìä Estado de migraciones:');
        console.log(`   ${hasObservacion ? '‚úÖ' : '‚ùå'} Campo "observacion"`);
        console.log(`   ${hasMetadata ? '‚úÖ' : '‚ùå'} Campo "metadata"`);

        if (hasObservacion && hasMetadata) {
            console.log('\nüéâ ¬°Todas las migraciones aplicadas exitosamente!');
        } else {
            console.log('\n‚ö†Ô∏è  Algunas migraciones no se aplicaron correctamente.');
            console.log('   Por favor, ejecuta los scripts SQL manualmente:');
            console.log('   - database/migration_observacion.sql');
            console.log('   - database/migration_metadata.sql');
        }

    } catch (error) {
        console.error('\n‚ùå Error general:', error.message);
        console.error('\nDetalles del error:', error);
        process.exit(1);
    } finally {
        if (connection) {
            await connection.end();
            console.log('\nüëã Conexi√≥n cerrada');
        }
    }
}

// Ejecutar
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
console.log('  üöÄ APLICADOR DE MIGRACIONES - WhatsApp Masivo');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

applyMigrations()
    .then(() => {
        console.log('\n‚úÖ Proceso completado');
        process.exit(0);
    })
    .catch(error => {
        console.error('\n‚ùå Error fatal:', error);
        process.exit(1);
    });

